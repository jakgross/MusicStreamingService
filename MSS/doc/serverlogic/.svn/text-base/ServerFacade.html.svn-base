<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_24) on Wed Jul 13 04:45:18 CEST 2011 -->
<TITLE>
ServerFacade
</TITLE>

<META NAME="date" CONTENT="2011-07-13">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="ServerFacade";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/ServerFacade.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../serverlogic/ServerDataHandlerTest.html" title="class in serverlogic"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?serverlogic/ServerFacade.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="ServerFacade.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
serverlogic</FONT>
<BR>
Class ServerFacade</H2>
<PRE>
java.lang.Object
  <IMG SRC="../resources/inherit.gif" ALT="extended by ">java.rmi.server.RemoteObject
      <IMG SRC="../resources/inherit.gif" ALT="extended by ">java.rmi.server.RemoteServer
          <IMG SRC="../resources/inherit.gif" ALT="extended by ">java.rmi.server.UnicastRemoteObject
              <IMG SRC="../resources/inherit.gif" ALT="extended by "><B>serverlogic.ServerFacade</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.io.Serializable, java.rmi.Remote, <A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>ServerFacade</B><DT>extends java.rmi.server.UnicastRemoteObject<DT>implements <A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A></DL>
</PRE>

<P>
Die Klasse ServerFacade
<P>

<P>
<DL>
<DT><B>Version:</B></DT>
  <DD>1.0</DD>
<DT><B>Author:</B></DT>
  <DD>JES</DD>
<DT><B>See Also:</B><DD><A HREF="../serialized-form.html#serverlogic.ServerFacade">Serialized Form</A></DL>
<HR>

<P>

<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#belongsToSynchronizationTeam(Common.Client)">belongsToSynchronizationTeam</A></B>(<A HREF="../Common/Client.html" title="class in Common">Client</A>&nbsp;client)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Überprüft, ob Client synchronisiert, oder synchronisiert wird</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#changeOrt(java.lang.String, java.lang.String)">changeOrt</A></B>(java.lang.String&nbsp;oldOrt,
          java.lang.String&nbsp;newOrt)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ändert den im Server für den Client gespeicherten Ort.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#checkOrt(java.lang.String)">checkOrt</A></B>(java.lang.String&nbsp;ort)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Überprüft ob Client mit dem Ort vorhanden, oder übergebener Ort = null</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#close()">close</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Informiert alle verbundenen Clients über Beenden des Servers und trennt die Clients vom Server</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../Common/SongPackage.html" title="class in Common">SongPackage</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#forward(java.lang.String)">forward</A></B>(java.lang.String&nbsp;ort)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;startet die Wiedergabe des nächsten Liedes in der Playliste</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.ArrayList&lt;<A HREF="../Common/Playlist.html" title="class in Common">Playlist</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#getAllPlaylists()">getAllPlaylists</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gibt alle Playlisten aus der Datenbank zurück</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../Common/Client.html" title="class in Common">Client</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#getClientByOrt(java.lang.String)">getClientByOrt</A></B>(java.lang.String&nbsp;ort)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gibt Client-Objekt über seinen Ort zurück</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.ArrayList&lt;<A HREF="../Common/Client.html" title="class in Common">Client</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#getClientList()">getClientList</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gibt Liste mit allen am Server verbundenen Clients zurück</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.util.HashSet&lt;java.lang.Integer&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#getOpenedPlaylists()">getOpenedPlaylists</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gibt von Clients geöffnete Playlisten zurück</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.ArrayList&lt;<A HREF="../Common/Client.html" title="class in Common">Client</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#getSynchronizationListBySlave(Common.Client)">getSynchronizationListBySlave</A></B>(<A HREF="../Common/Client.html" title="class in Common">Client</A>&nbsp;client)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gibt Liste aller Clients zurück, die in der gleichen Synchronistionsgruppe sind wie der übergebene Client.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#isSynchronizationMaster(Common.Client)">isSynchronizationMaster</A></B>(<A HREF="../Common/Client.html" title="class in Common">Client</A>&nbsp;client)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Überprüft, ob Client andere Clients synchronisiert</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#isSynchronizationSlave(Common.Client)">isSynchronizationSlave</A></B>(<A HREF="../Common/Client.html" title="class in Common">Client</A>&nbsp;client)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;überprüft, ob Client synchronisiert wird</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#login(java.lang.String, java.lang.String)">login</A></B>(java.lang.String&nbsp;clientIP,
      java.lang.String&nbsp;ort)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;führt Client aus, um sich im Server zu registrieren.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#logoutClient(java.lang.String)">logoutClient</A></B>(java.lang.String&nbsp;ort)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Schließt alle Verbindungen zum Client und entfernt ihn aus allen Listen im Server</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.ArrayList&lt;<A HREF="../Common/Song.html" title="class in Common">Song</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#openPlaylist(Common.Playlist, java.lang.String)">openPlaylist</A></B>(<A HREF="../Common/Playlist.html" title="class in Common">Playlist</A>&nbsp;playlist,
             java.lang.String&nbsp;ort)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Öffnet eine Playliste und blockiert den Zugriff auf diese für den Administrator.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#pause(java.lang.String)">pause</A></B>(java.lang.String&nbsp;ort)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pausiert Wiedergabe bei synchronisierten Clients</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../Common/SongPackage.html" title="class in Common">SongPackage</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#play(java.lang.String, Common.Song, Common.Playlist)">play</A></B>(java.lang.String&nbsp;ort,
     <A HREF="../Common/Song.html" title="class in Common">Song</A>&nbsp;song,
     <A HREF="../Common/Playlist.html" title="class in Common">Playlist</A>&nbsp;playlist)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;die Methode erstellt mit den Informationen ein neues SongPackage, bzw. einen neuen Stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../Common/SongPackage.html" title="class in Common">SongPackage</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#prev(java.lang.String)">prev</A></B>(java.lang.String&nbsp;ort)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;startet die Wiedergabe des vorherigen Liedes in der Playliste</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#resume(java.lang.String)">resume</A></B>(java.lang.String&nbsp;ort)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nimmt die Wiedergabe des pausierte Liedes bei synchronisierten Clients wieder auf</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.ArrayList&lt;<A HREF="../Common/Playlist.html" title="class in Common">Playlist</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#searchSongClient(java.lang.String)">searchSongClient</A></B>(java.lang.String&nbsp;inputSearch)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sucht nach dem Parameter String entprechende Songs aus der Datenbank 
 und gibt Liste mit Playlisten, in denen die Songs vorkommen zurück.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#stopSynchronisation(java.lang.String)">stopSynchronisation</A></B>(java.lang.String&nbsp;ort)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stoppt die Synchronisation von allen Clients, die vom Übergebenen Client synchronisiert werden</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../serverlogic/ServerFacade.html#synchronize(java.lang.String, java.util.ArrayList)">synchronize</A></B>(java.lang.String&nbsp;ort,
            java.util.ArrayList&lt;<A HREF="../Common/Client.html" title="class in Common">Client</A>&gt;&nbsp;clientList)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Startet die Synchronisierung der übergebenen Clients mit dem Master.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.rmi.server.UnicastRemoteObject"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.rmi.server.UnicastRemoteObject</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, exportObject, exportObject, exportObject, unexportObject</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.rmi.server.RemoteServer"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.rmi.server.RemoteServer</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>getClientHost, getLog, setLog</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.rmi.server.RemoteObject"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.rmi.server.RemoteObject</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>equals, getRef, hashCode, toString, toStub</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>getClass, notify, notifyAll, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="getClientByOrt(java.lang.String)"><!-- --></A><H3>
getClientByOrt</H3>
<PRE>
public <A HREF="../Common/Client.html" title="class in Common">Client</A> <B>getClientByOrt</B>(java.lang.String&nbsp;ort)</PRE>
<DL>
<DD>Gibt Client-Objekt über seinen Ort zurück
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ort</CODE> - Ort des Clients
<DT><B>Returns:</B><DD>Client-Objekt</DL>
</DD>
</DL>
<HR>

<A NAME="belongsToSynchronizationTeam(Common.Client)"><!-- --></A><H3>
belongsToSynchronizationTeam</H3>
<PRE>
public boolean <B>belongsToSynchronizationTeam</B>(<A HREF="../Common/Client.html" title="class in Common">Client</A>&nbsp;client)</PRE>
<DL>
<DD>Überprüft, ob Client synchronisiert, oder synchronisiert wird
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>client</CODE> - zu überprüfender Client
<DT><B>Returns:</B><DD>true, wenn Client synchronisert wird oder synchronisiert</DL>
</DD>
</DL>
<HR>

<A NAME="isSynchronizationMaster(Common.Client)"><!-- --></A><H3>
isSynchronizationMaster</H3>
<PRE>
public boolean <B>isSynchronizationMaster</B>(<A HREF="../Common/Client.html" title="class in Common">Client</A>&nbsp;client)</PRE>
<DL>
<DD>Überprüft, ob Client andere Clients synchronisiert
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>client</CODE> - der zu überprüfende Client
<DT><B>Returns:</B><DD>true, wenn Client andere Clients synchronisiert</DL>
</DD>
</DL>
<HR>

<A NAME="getSynchronizationListBySlave(Common.Client)"><!-- --></A><H3>
getSynchronizationListBySlave</H3>
<PRE>
public java.util.ArrayList&lt;<A HREF="../Common/Client.html" title="class in Common">Client</A>&gt; <B>getSynchronizationListBySlave</B>(<A HREF="../Common/Client.html" title="class in Common">Client</A>&nbsp;client)</PRE>
<DL>
<DD>Gibt Liste aller Clients zurück, die in der gleichen Synchronistionsgruppe sind wie der übergebene Client.
 Wird benötigt, um Client bei logout aus der Liste auszutragen.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>client</CODE> - der zu überprüfende Client
<DT><B>Returns:</B><DD>Liste von mit dem Client synchronisierten Clients</DL>
</DD>
</DL>
<HR>

<A NAME="isSynchronizationSlave(Common.Client)"><!-- --></A><H3>
isSynchronizationSlave</H3>
<PRE>
public boolean <B>isSynchronizationSlave</B>(<A HREF="../Common/Client.html" title="class in Common">Client</A>&nbsp;client)</PRE>
<DL>
<DD>überprüft, ob Client synchronisiert wird
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>client</CODE> - der zu überpüfende Client
<DT><B>Returns:</B><DD>true, wenn Client synchronisiert wird</DL>
</DD>
</DL>
<HR>

<A NAME="close()"><!-- --></A><H3>
close</H3>
<PRE>
public void <B>close</B>()</PRE>
<DL>
<DD>Informiert alle verbundenen Clients über Beenden des Servers und trennt die Clients vom Server
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="checkOrt(java.lang.String)"><!-- --></A><H3>
checkOrt</H3>
<PRE>
public boolean <B>checkOrt</B>(java.lang.String&nbsp;ort)
                 throws java.rmi.RemoteException</PRE>
<DL>
<DD>Überprüft ob Client mit dem Ort vorhanden, oder übergebener Ort = null
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../serverlogic/ServerFacadeInterface.html#checkOrt(java.lang.String)">checkOrt</A></CODE> in interface <CODE><A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ort</CODE> - the ort
<DT><B>Returns:</B><DD>true, wenn Client mit dem Ort noch nicht vorhanden
<DT><B>Throws:</B>
<DD><CODE>java.rmi.RemoteException</CODE> - the remote exception<DT><B>See Also:</B><DD><A HREF="../serverlogic/ServerFacadeInterface.html#checkOrt(java.lang.String)"><CODE>ServerFacadeInterface.checkOrt(java.lang.String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getClientList()"><!-- --></A><H3>
getClientList</H3>
<PRE>
public java.util.ArrayList&lt;<A HREF="../Common/Client.html" title="class in Common">Client</A>&gt; <B>getClientList</B>()</PRE>
<DL>
<DD>Gibt Liste mit allen am Server verbundenen Clients zurück
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../serverlogic/ServerFacadeInterface.html#getClientList()">getClientList</A></CODE> in interface <CODE><A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the client list</DL>
</DD>
</DL>
<HR>

<A NAME="login(java.lang.String, java.lang.String)"><!-- --></A><H3>
login</H3>
<PRE>
public boolean <B>login</B>(java.lang.String&nbsp;clientIP,
                     java.lang.String&nbsp;ort)
              throws java.rmi.RemoteException</PRE>
<DL>
<DD>führt Client aus, um sich im Server zu registrieren. 
 Wenn Ort noch nicht vorhanden und Client über RMI verbunden, füge diesen in ClientList hinzu.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../serverlogic/ServerFacadeInterface.html#login(java.lang.String, java.lang.String)">login</A></CODE> in interface <CODE><A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>clientIP</CODE> - the client ip<DD><CODE>ort</CODE> - the ort
<DT><B>Returns:</B><DD>true, wenn Client erfolgreich angemeldet ist
<DT><B>Throws:</B>
<DD><CODE>java.rmi.RemoteException</CODE> - the remote exception</DL>
</DD>
</DL>
<HR>

<A NAME="logoutClient(java.lang.String)"><!-- --></A><H3>
logoutClient</H3>
<PRE>
public boolean <B>logoutClient</B>(java.lang.String&nbsp;ort)
                     throws java.rmi.RemoteException</PRE>
<DL>
<DD>Schließt alle Verbindungen zum Client und entfernt ihn aus allen Listen im Server
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../serverlogic/ServerFacadeInterface.html#logoutClient(java.lang.String)">logoutClient</A></CODE> in interface <CODE><A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ort</CODE> - Ort des abzumeldenden Clients
<DT><B>Returns:</B><DD>true, wenn erfolgreich abgemeldet
<DT><B>Throws:</B>
<DD><CODE>java.rmi.RemoteException</CODE> - the remote exception</DL>
</DD>
</DL>
<HR>

<A NAME="synchronize(java.lang.String, java.util.ArrayList)"><!-- --></A><H3>
synchronize</H3>
<PRE>
public void <B>synchronize</B>(java.lang.String&nbsp;ort,
                        java.util.ArrayList&lt;<A HREF="../Common/Client.html" title="class in Common">Client</A>&gt;&nbsp;clientList)
                 throws java.rmi.RemoteException</PRE>
<DL>
<DD>Startet die Synchronisierung der übergebenen Clients mit dem Master.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../serverlogic/ServerFacadeInterface.html#synchronize(java.lang.String, java.util.ArrayList)">synchronize</A></CODE> in interface <CODE><A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ort</CODE> - Ort, des Synchronisation-Masters<DD><CODE>clientList</CODE> - ArrayList<Client>, der zu sychronisierenden Clients
<DT><B>Throws:</B>
<DD><CODE>java.rmi.RemoteException</CODE> - the remote exception</DL>
</DD>
</DL>
<HR>

<A NAME="stopSynchronisation(java.lang.String)"><!-- --></A><H3>
stopSynchronisation</H3>
<PRE>
public void <B>stopSynchronisation</B>(java.lang.String&nbsp;ort)</PRE>
<DL>
<DD>stoppt die Synchronisation von allen Clients, die vom Übergebenen Client synchronisiert werden
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../serverlogic/ServerFacadeInterface.html#stopSynchronisation(java.lang.String)">stopSynchronisation</A></CODE> in interface <CODE><A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ort</CODE> - Ort des Clients</DL>
</DD>
</DL>
<HR>

<A NAME="getAllPlaylists()"><!-- --></A><H3>
getAllPlaylists</H3>
<PRE>
public java.util.ArrayList&lt;<A HREF="../Common/Playlist.html" title="class in Common">Playlist</A>&gt; <B>getAllPlaylists</B>()</PRE>
<DL>
<DD>gibt alle Playlisten aus der Datenbank zurück
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../serverlogic/ServerFacadeInterface.html#getAllPlaylists()">getAllPlaylists</A></CODE> in interface <CODE><A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>ArrayList<Playlist> alle gespeicherten Playlisten</DL>
</DD>
</DL>
<HR>

<A NAME="openPlaylist(Common.Playlist, java.lang.String)"><!-- --></A><H3>
openPlaylist</H3>
<PRE>
public java.util.ArrayList&lt;<A HREF="../Common/Song.html" title="class in Common">Song</A>&gt; <B>openPlaylist</B>(<A HREF="../Common/Playlist.html" title="class in Common">Playlist</A>&nbsp;playlist,
                                              java.lang.String&nbsp;ort)</PRE>
<DL>
<DD>Öffnet eine Playliste und blockiert den Zugriff auf diese für den Administrator.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../serverlogic/ServerFacadeInterface.html#openPlaylist(Common.Playlist, java.lang.String)">openPlaylist</A></CODE> in interface <CODE><A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ort</CODE> - Ort des Clients<DD><CODE>playlist</CODE> - zu öffnende Playliste
<DT><B>Returns:</B><DD>ArrayList<Song> zu der Playliste gehörende Songs</DL>
</DD>
</DL>
<HR>

<A NAME="searchSongClient(java.lang.String)"><!-- --></A><H3>
searchSongClient</H3>
<PRE>
public java.util.ArrayList&lt;<A HREF="../Common/Playlist.html" title="class in Common">Playlist</A>&gt; <B>searchSongClient</B>(java.lang.String&nbsp;inputSearch)</PRE>
<DL>
<DD>Sucht nach dem Parameter String entprechende Songs aus der Datenbank 
 und gibt Liste mit Playlisten, in denen die Songs vorkommen zurück.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../serverlogic/ServerFacadeInterface.html#searchSongClient(java.lang.String)">searchSongClient</A></CODE> in interface <CODE><A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>inputSearch</CODE> - String, nach dem gesucht werden soll
<DT><B>Returns:</B><DD>ArrayList<Playlist> entprechende Playlisten</DL>
</DD>
</DL>
<HR>

<A NAME="changeOrt(java.lang.String, java.lang.String)"><!-- --></A><H3>
changeOrt</H3>
<PRE>
public boolean <B>changeOrt</B>(java.lang.String&nbsp;oldOrt,
                         java.lang.String&nbsp;newOrt)
                  throws java.rmi.RemoteException</PRE>
<DL>
<DD>Ändert den im Server für den Client gespeicherten Ort.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../serverlogic/ServerFacadeInterface.html#changeOrt(java.lang.String, java.lang.String)">changeOrt</A></CODE> in interface <CODE><A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>oldOrt</CODE> - alter gespeicherter Ort<DD><CODE>newOrt</CODE> - neuer, zu speichernder Ort
<DT><B>Returns:</B><DD>true, wenn erfolgreich geändert
<DT><B>Throws:</B>
<DD><CODE>java.rmi.RemoteException</CODE> - bei RMI-Fehler</DL>
</DD>
</DL>
<HR>

<A NAME="play(java.lang.String, Common.Song, Common.Playlist)"><!-- --></A><H3>
play</H3>
<PRE>
public <A HREF="../Common/SongPackage.html" title="class in Common">SongPackage</A> <B>play</B>(java.lang.String&nbsp;ort,
                        <A HREF="../Common/Song.html" title="class in Common">Song</A>&nbsp;song,
                        <A HREF="../Common/Playlist.html" title="class in Common">Playlist</A>&nbsp;playlist)
                 throws java.rmi.RemoteException</PRE>
<DL>
<DD>die Methode erstellt mit den Informationen ein neues SongPackage, bzw. einen neuen Stream.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../serverlogic/ServerFacadeInterface.html#play(java.lang.String, Common.Song, Common.Playlist)">play</A></CODE> in interface <CODE><A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ort</CODE> - Ort des Clients<DD><CODE>song</CODE> - Lied, das abgespielt werden soll<DD><CODE>playlist</CODE> - Playliste aus der das Lied abgespielt werden soll
<DT><B>Returns:</B><DD><A HREF="../Common/SongPackage.html" title="class in Common"><CODE>SongPackage</CODE></A> verpackter Stream in SongPackage
<DT><B>Throws:</B>
<DD><CODE>java.rmi.RemoteException</CODE> - RMI-Fehler</DL>
</DD>
</DL>
<HR>

<A NAME="prev(java.lang.String)"><!-- --></A><H3>
prev</H3>
<PRE>
public <A HREF="../Common/SongPackage.html" title="class in Common">SongPackage</A> <B>prev</B>(java.lang.String&nbsp;ort)
                 throws java.rmi.RemoteException</PRE>
<DL>
<DD>startet die Wiedergabe des vorherigen Liedes in der Playliste
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../serverlogic/ServerFacadeInterface.html#prev(java.lang.String)">prev</A></CODE> in interface <CODE><A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ort</CODE> - Ort des Clients auf dem die Methode ausgeführt wird
<DT><B>Returns:</B><DD>SongPackage mit dem Stream
<DT><B>Throws:</B>
<DD><CODE>java.rmi.RemoteException</CODE> - the remote exception</DL>
</DD>
</DL>
<HR>

<A NAME="forward(java.lang.String)"><!-- --></A><H3>
forward</H3>
<PRE>
public <A HREF="../Common/SongPackage.html" title="class in Common">SongPackage</A> <B>forward</B>(java.lang.String&nbsp;ort)
                    throws java.rmi.RemoteException</PRE>
<DL>
<DD>startet die Wiedergabe des nächsten Liedes in der Playliste
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../serverlogic/ServerFacadeInterface.html#forward(java.lang.String)">forward</A></CODE> in interface <CODE><A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ort</CODE> - Ort des Clients auf dem die Methode ausgeführt wird
<DT><B>Returns:</B><DD>SongPackage mit dem Stream
<DT><B>Throws:</B>
<DD><CODE>java.rmi.RemoteException</CODE> - the remote exception</DL>
</DD>
</DL>
<HR>

<A NAME="pause(java.lang.String)"><!-- --></A><H3>
pause</H3>
<PRE>
public void <B>pause</B>(java.lang.String&nbsp;ort)
           throws java.rmi.RemoteException</PRE>
<DL>
<DD>pausiert Wiedergabe bei synchronisierten Clients
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../serverlogic/ServerFacadeInterface.html#pause(java.lang.String)">pause</A></CODE> in interface <CODE><A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ort</CODE> - Ort des SynchronisationMasters
<DT><B>Throws:</B>
<DD><CODE>java.rmi.RemoteException</CODE> - the remote exception</DL>
</DD>
</DL>
<HR>

<A NAME="resume(java.lang.String)"><!-- --></A><H3>
resume</H3>
<PRE>
public void <B>resume</B>(java.lang.String&nbsp;ort)
            throws java.rmi.RemoteException</PRE>
<DL>
<DD>nimmt die Wiedergabe des pausierte Liedes bei synchronisierten Clients wieder auf
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../serverlogic/ServerFacadeInterface.html#resume(java.lang.String)">resume</A></CODE> in interface <CODE><A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ort</CODE> - Ort des SynchronisationMasters
<DT><B>Throws:</B>
<DD><CODE>java.rmi.RemoteException</CODE> - the remote exception</DL>
</DD>
</DL>
<HR>

<A NAME="getOpenedPlaylists()"><!-- --></A><H3>
getOpenedPlaylists</H3>
<PRE>
public static java.util.HashSet&lt;java.lang.Integer&gt; <B>getOpenedPlaylists</B>()</PRE>
<DL>
<DD>Gibt von Clients geöffnete Playlisten zurück
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>HashSet mit IDs der Playlisten</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/ServerFacade.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../serverlogic/ServerDataHandlerTest.html" title="class in serverlogic"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?serverlogic/ServerFacade.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="ServerFacade.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
