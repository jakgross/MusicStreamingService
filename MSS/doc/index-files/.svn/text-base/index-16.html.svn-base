<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_24) on Wed Jul 13 04:45:19 CEST 2011 -->
<TITLE>
S-Index
</TITLE>

<META NAME="date" CONTENT="2011-07-13">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="S-Index";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="index-15.html"><B>PREV LETTER</B></A>&nbsp;
&nbsp;<A HREF="index-17.html"><B>NEXT LETTER</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?index-filesindex-16.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-16.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<A HREF="index-1.html">A</A> <A HREF="index-2.html">B</A> <A HREF="index-3.html">C</A> <A HREF="index-4.html">D</A> <A HREF="index-5.html">E</A> <A HREF="index-6.html">F</A> <A HREF="index-7.html">G</A> <A HREF="index-8.html">H</A> <A HREF="index-9.html">I</A> <A HREF="index-10.html">L</A> <A HREF="index-11.html">M</A> <A HREF="index-12.html">N</A> <A HREF="index-13.html">O</A> <A HREF="index-14.html">P</A> <A HREF="index-15.html">R</A> <A HREF="index-16.html">S</A> <A HREF="index-17.html">T</A> <A HREF="index-18.html">W</A> <HR>
<A NAME="_S_"><!-- --></A><H2>
<B>S</B></H2>
<DL>
<DT><A HREF="../serverdata/DataManager.html#saveBasisordner(java.lang.String)"><B>saveBasisordner(String)</B></A> - 
Method in class serverdata.<A HREF="../serverdata/DataManager.html" title="class in serverdata">DataManager</A>
<DD><A HREF="../serverdata/DBBasisordnerHandler.html#saveBasisordner(java.lang.String)"><CODE>DBBasisordnerHandler.saveBasisordner(String)</CODE></A>
<DT><A HREF="../serverdata/DataManagerInterface.html#saveBasisordner(java.lang.String)"><B>saveBasisordner(String)</B></A> - 
Method in interface serverdata.<A HREF="../serverdata/DataManagerInterface.html" title="interface in serverdata">DataManagerInterface</A>
<DD><A HREF="../serverdata/DataManager.html#saveBasisordner(java.lang.String)"><CODE>DataManager.saveBasisordner(String)</CODE></A>
<DT><A HREF="../serverdata/DBBasisordnerHandler.html#saveBasisordner(java.lang.String)"><B>saveBasisordner(String)</B></A> - 
Method in class serverdata.<A HREF="../serverdata/DBBasisordnerHandler.html" title="class in serverdata">DBBasisordnerHandler</A>
<DD>Speichert den eingegebenen Basisordner in der Datenbank
<DT><A HREF="../servergui/ServerGUI.html#saveBordner(java.lang.String)"><B>saveBordner(String)</B></A> - 
Method in class servergui.<A HREF="../servergui/ServerGUI.html" title="class in servergui">ServerGUI</A>
<DD>speichert übergebenen Basisordner
<DT><A HREF="../clientgui/LoginDialog.html#saveOrt(java.lang.String)"><B>saveOrt(String)</B></A> - 
Method in class clientgui.<A HREF="../clientgui/LoginDialog.html" title="class in clientgui">LoginDialog</A>
<DD>Überprüft ob eine ort.txt datei vorhanden ist, wenn ja wird diese
 gelöscht. wenn nicht, wird eine neue Datei mit dem aktuellen Ort
 erstellt.
<DT><A HREF="../serverdata/DataManager.html#savePlaylist(Common.Playlist)"><B>savePlaylist(Playlist)</B></A> - 
Method in class serverdata.<A HREF="../serverdata/DataManager.html" title="class in serverdata">DataManager</A>
<DD><A HREF="../serverdata/DBPlaylistHandler.html#savePlaylist(Common.Playlist)"><CODE>DBPlaylistHandler.savePlaylist(Playlist)</CODE></A>
<DT><A HREF="../serverdata/DataManagerInterface.html#savePlaylist(Common.Playlist)"><B>savePlaylist(Playlist)</B></A> - 
Method in interface serverdata.<A HREF="../serverdata/DataManagerInterface.html" title="interface in serverdata">DataManagerInterface</A>
<DD><A HREF="../serverdata/DataManager.html#savePlaylist(Common.Playlist)"><CODE>DataManager.savePlaylist(Playlist)</CODE></A>
<DT><A HREF="../serverdata/DBPlaylistHandler.html#savePlaylist(Common.Playlist)"><B>savePlaylist(Playlist)</B></A> - 
Method in class serverdata.<A HREF="../serverdata/DBPlaylistHandler.html" title="class in serverdata">DBPlaylistHandler</A>
<DD>Speichert eine Playliste in der Datenbank.
<DT><A HREF="../serverdata/DataManager.html#savePlaylistSongs(int, java.util.ArrayList)"><B>savePlaylistSongs(int, ArrayList&lt;Song&gt;)</B></A> - 
Method in class serverdata.<A HREF="../serverdata/DataManager.html" title="class in serverdata">DataManager</A>
<DD><A HREF="../serverdata/DBPlaylistHandler.html#savePlaylistSongs(int, java.util.ArrayList)"><CODE>DBPlaylistHandler.savePlaylistSongs(int, ArrayList)</CODE></A>
<DT><A HREF="../serverdata/DataManagerInterface.html#savePlaylistSongs(int, java.util.ArrayList)"><B>savePlaylistSongs(int, ArrayList&lt;Song&gt;)</B></A> - 
Method in interface serverdata.<A HREF="../serverdata/DataManagerInterface.html" title="interface in serverdata">DataManagerInterface</A>
<DD><A HREF="../serverdata/DataManager.html#savePlaylistSongs(int, java.util.ArrayList)"><CODE>DataManager.savePlaylistSongs(int, ArrayList)</CODE></A>
<DT><A HREF="../serverdata/DBPlaylistHandler.html#savePlaylistSongs(int, java.util.ArrayList)"><B>savePlaylistSongs(int, ArrayList&lt;Song&gt;)</B></A> - 
Method in class serverdata.<A HREF="../serverdata/DBPlaylistHandler.html" title="class in serverdata">DBPlaylistHandler</A>
<DD>Speichert alle zu einer Playliste gehörenden Lieder in der DB
<DT><A HREF="../clientgui/LoginDialog.html#saveServerIP(java.lang.String)"><B>saveServerIP(String)</B></A> - 
Method in class clientgui.<A HREF="../clientgui/LoginDialog.html" title="class in clientgui">LoginDialog</A>
<DD>Überprüft ob eine serverip.txt datei vorhanden ist, wenn ja wird diese
 gelöscht. wenn nicht, wird eine neue Datei mit der aktuellen Server-IP
 erstellt.
<DT><A HREF="../servergui/EditPanel.html#searchAction()"><B>searchAction()</B></A> - 
Method in class servergui.<A HREF="../servergui/EditPanel.html" title="class in servergui">EditPanel</A>
<DD>Sucht Songs und erstellt Table mit gefunden Song/s
<DT><A HREF="../serverdata/DataManager.html#searchSongAdmin(java.lang.String)"><B>searchSongAdmin(String)</B></A> - 
Method in class serverdata.<A HREF="../serverdata/DataManager.html" title="class in serverdata">DataManager</A>
<DD><A HREF="../serverdata/DBPlaylistHandler.html#searchSongAdmin(java.lang.String)"><CODE>DBPlaylistHandler.searchSongAdmin(String)</CODE></A>
<DT><A HREF="../serverdata/DataManagerInterface.html#searchSongAdmin(java.lang.String)"><B>searchSongAdmin(String)</B></A> - 
Method in interface serverdata.<A HREF="../serverdata/DataManagerInterface.html" title="interface in serverdata">DataManagerInterface</A>
<DD><A HREF="../serverdata/DataManager.html#searchSongAdmin(java.lang.String)"><CODE>DataManager.searchSongAdmin(String)</CODE></A>
<DT><A HREF="../serverdata/DBPlaylistHandler.html#searchSongAdmin(java.lang.String)"><B>searchSongAdmin(String)</B></A> - 
Method in class serverdata.<A HREF="../serverdata/DBPlaylistHandler.html" title="class in serverdata">DBPlaylistHandler</A>
<DD>Gibt alle Songs, die den Suchbegriff inputSearch enthalten als ArrayListe
 zurück.
<DT><A HREF="../serverdata/DataManager.html#searchSongClient(java.lang.String)"><B>searchSongClient(String)</B></A> - 
Method in class serverdata.<A HREF="../serverdata/DataManager.html" title="class in serverdata">DataManager</A>
<DD><A HREF="../serverdata/DBPlaylistHandler.html#searchSongClient(java.lang.String)"><CODE>DBPlaylistHandler.searchSongClient(String)</CODE></A>
<DT><A HREF="../serverdata/DataManagerInterface.html#searchSongClient(java.lang.String)"><B>searchSongClient(String)</B></A> - 
Method in interface serverdata.<A HREF="../serverdata/DataManagerInterface.html" title="interface in serverdata">DataManagerInterface</A>
<DD><A HREF="../serverdata/DataManager.html#searchSongClient(java.lang.String)"><CODE>DataManager.searchSongClient(String)</CODE></A>
<DT><A HREF="../serverdata/DBPlaylistHandler.html#searchSongClient(java.lang.String)"><B>searchSongClient(String)</B></A> - 
Method in class serverdata.<A HREF="../serverdata/DBPlaylistHandler.html" title="class in serverdata">DBPlaylistHandler</A>
<DD>Gibt alle Playlisten zurück, die Songs enthalten, welche die eingegebenen
 Suchbegriffe enthalten
<DT><A HREF="../serverlogic/ServerDataHandler.html#searchSongClient(java.lang.String)"><B>searchSongClient(String)</B></A> - 
Method in class serverlogic.<A HREF="../serverlogic/ServerDataHandler.html" title="class in serverlogic">ServerDataHandler</A>
<DD>sucht dem Suchbegriff ensprechende Songs, 
 und gibt die Playlisten zurück, die die Songs enthalten
 <A HREF="../serverdata/DBPlaylistHandler.html#searchSongClient(java.lang.String)"><CODE>DBPlaylistHandler.searchSongClient(String)</CODE></A>
<DT><A HREF="../serverlogic/ServerFacade.html#searchSongClient(java.lang.String)"><B>searchSongClient(String)</B></A> - 
Method in class serverlogic.<A HREF="../serverlogic/ServerFacade.html" title="class in serverlogic">ServerFacade</A>
<DD>Sucht nach dem Parameter String entprechende Songs aus der Datenbank 
 und gibt Liste mit Playlisten, in denen die Songs vorkommen zurück.
<DT><A HREF="../serverlogic/ServerFacadeInterface.html#searchSongClient(java.lang.String)"><B>searchSongClient(String)</B></A> - 
Method in interface serverlogic.<A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A>
<DD>Search song client.
<DT><A HREF="../serverlogic/ServerGUIInterface.html#searchSongClient(java.lang.String)"><B>searchSongClient(String)</B></A> - 
Method in interface serverlogic.<A HREF="../serverlogic/ServerGUIInterface.html" title="interface in serverlogic">ServerGUIInterface</A>
<DD>gibt dem Suchbegriff entsprechende Songs, deren Playlisten zurück
<DT><A HREF="../clientlogic/ClientFacade.html#serverClosed()"><B>serverClosed()</B></A> - 
Method in class clientlogic.<A HREF="../clientlogic/ClientFacade.html" title="class in clientlogic">ClientFacade</A>
<DD>Signalisiert dem Client-Benutzer, dass der Server geschlossen ist, 
 bei Bestätigen wird die Client-Software geschlossen
<DT><A HREF="../clientlogic/ClientFacadeInterface.html#serverClosed()"><B>serverClosed()</B></A> - 
Method in interface clientlogic.<A HREF="../clientlogic/ClientFacadeInterface.html" title="interface in clientlogic">ClientFacadeInterface</A>
<DD>Server closed.
<DT><A HREF="../serverdata/package-summary.html"><B>serverdata</B></A> - package serverdata<DD>&nbsp;<DT><A HREF="../serverlogic/ServerDataHandler.html" title="class in serverlogic"><B>ServerDataHandler</B></A> - Class in <A HREF="../serverlogic/package-summary.html">serverlogic</A><DD>Stellt Methoden zur Verfügung um mit der Datenbank zu arbeiten.<DT><A HREF="../serverlogic/ServerDataHandler.html#ServerDataHandler()"><B>ServerDataHandler()</B></A> - 
Constructor for class serverlogic.<A HREF="../serverlogic/ServerDataHandler.html" title="class in serverlogic">ServerDataHandler</A>
<DD>&nbsp;
<DT><A HREF="../serverlogic/ServerDataHandlerTest.html" title="class in serverlogic"><B>ServerDataHandlerTest</B></A> - Class in <A HREF="../serverlogic/package-summary.html">serverlogic</A><DD>&nbsp;<DT><A HREF="../serverlogic/ServerDataHandlerTest.html#ServerDataHandlerTest()"><B>ServerDataHandlerTest()</B></A> - 
Constructor for class serverlogic.<A HREF="../serverlogic/ServerDataHandlerTest.html" title="class in serverlogic">ServerDataHandlerTest</A>
<DD>&nbsp;
<DT><A HREF="../serverlogic/ServerFacade.html" title="class in serverlogic"><B>ServerFacade</B></A> - Class in <A HREF="../serverlogic/package-summary.html">serverlogic</A><DD>Die Klasse ServerFacade<DT><A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic"><B>ServerFacadeInterface</B></A> - Interface in <A HREF="../serverlogic/package-summary.html">serverlogic</A><DD>Definiert die Methoden, die in der <A HREF="../serverlogic/ServerFacade.html" title="class in serverlogic"><CODE>ServerFacade</CODE></A> implementiert sind<DT><A HREF="../serverlogic/ServerFacadeTest.html" title="class in serverlogic"><B>ServerFacadeTest</B></A> - Class in <A HREF="../serverlogic/package-summary.html">serverlogic</A><DD>&nbsp;<DT><A HREF="../serverlogic/ServerFacadeTest.html#ServerFacadeTest()"><B>ServerFacadeTest()</B></A> - 
Constructor for class serverlogic.<A HREF="../serverlogic/ServerFacadeTest.html" title="class in serverlogic">ServerFacadeTest</A>
<DD>&nbsp;
<DT><A HREF="../servergui/package-summary.html"><B>servergui</B></A> - package servergui<DD>&nbsp;<DT><A HREF="../servergui/ServerGUI.html" title="class in servergui"><B>ServerGUI</B></A> - Class in <A HREF="../servergui/package-summary.html">servergui</A><DD>Das Hauptfenster des Servers.<DT><A HREF="../servergui/ServerGUI.html#ServerGUI()"><B>ServerGUI()</B></A> - 
Constructor for class servergui.<A HREF="../servergui/ServerGUI.html" title="class in servergui">ServerGUI</A>
<DD>Startet die GUI und überprüft Basisordner
<DT><A HREF="../serverlogic/ServerGUIInterface.html" title="interface in serverlogic"><B>ServerGUIInterface</B></A> - Interface in <A HREF="../serverlogic/package-summary.html">serverlogic</A><DD>Definiert Methoden, die der ServerGUI den Zugriff auf dei Datenschicht erlauben.<DT><A HREF="../serverlogic/package-summary.html"><B>serverlogic</B></A> - package serverlogic<DD>&nbsp;<DT><A HREF="../serverlogic/ServerMain.html" title="class in serverlogic"><B>ServerMain</B></A> - Class in <A HREF="../serverlogic/package-summary.html">serverlogic</A><DD>Die ServerMain-Klasse startet RMI-Server.<DT><A HREF="../serverlogic/ServerMainTest.html" title="class in serverlogic"><B>ServerMainTest</B></A> - Class in <A HREF="../serverlogic/package-summary.html">serverlogic</A><DD>&nbsp;<DT><A HREF="../serverlogic/ServerMainTest.html#ServerMainTest()"><B>ServerMainTest()</B></A> - 
Constructor for class serverlogic.<A HREF="../serverlogic/ServerMainTest.html" title="class in serverlogic">ServerMainTest</A>
<DD>&nbsp;
<DT><A HREF="../Common/Song.html#setAlbum(java.lang.String)"><B>setAlbum(String)</B></A> - 
Method in class Common.<A HREF="../Common/Song.html" title="class in Common">Song</A>
<DD>&nbsp;
<DT><A HREF="../Common/Song.html#setFileName(java.lang.String)"><B>setFileName(String)</B></A> - 
Method in class Common.<A HREF="../Common/Song.html" title="class in Common">Song</A>
<DD>Sets the file name.
<DT><A HREF="../Common/Song.html#setGenre(java.lang.String)"><B>setGenre(String)</B></A> - 
Method in class Common.<A HREF="../Common/Song.html" title="class in Common">Song</A>
<DD>&nbsp;
<DT><A HREF="../Common/Song.html#setInterpret(java.lang.String)"><B>setInterpret(String)</B></A> - 
Method in class Common.<A HREF="../Common/Song.html" title="class in Common">Song</A>
<DD>&nbsp;
<DT><A HREF="../clientgui/ClientGUI.html#setLogged(boolean)"><B>setLogged(boolean)</B></A> - 
Method in class clientgui.<A HREF="../clientgui/ClientGUI.html" title="class in clientgui">ClientGUI</A>
<DD>boolean, ob Client im Server eingeloggt ist
<DT><A HREF="../clientlogic/player/AudioPlayer.html#setMediaTime(long)"><B>setMediaTime(long)</B></A> - 
Method in class clientlogic.player.<A HREF="../clientlogic/player/AudioPlayer.html" title="class in clientlogic.player">AudioPlayer</A>
<DD>Setzt Position an der abgespielt wird im Lied.
<DT><A HREF="../clientlogic/ClientFacade.html#setOrt(java.lang.String)"><B>setOrt(String)</B></A> - 
Method in class clientlogic.<A HREF="../clientlogic/ClientFacade.html" title="class in clientlogic">ClientFacade</A>
<DD>Legt Ort des Clients fest
<DT><A HREF="../Common/Client.html#setOrt(java.lang.String)"><B>setOrt(String)</B></A> - 
Method in class Common.<A HREF="../Common/Client.html" title="class in Common">Client</A>
<DD>Sets the ort.
<DT><A HREF="../Common/Playlist.html#setPlaylistName(java.lang.String)"><B>setPlaylistName(String)</B></A> - 
Method in class Common.<A HREF="../Common/Playlist.html" title="class in Common">Playlist</A>
<DD>&nbsp;
<DT><A HREF="../Common/SongPackage.html#setRemoteStream(com.healthmarketscience.rmiio.RemoteInputStream)"><B>setRemoteStream(RemoteInputStream)</B></A> - 
Method in class Common.<A HREF="../Common/SongPackage.html" title="class in Common">SongPackage</A>
<DD>&nbsp;
<DT><A HREF="../clientgui/ClientGUI.html#setSelectedPlaylist(Common.Playlist)"><B>setSelectedPlaylist(Playlist)</B></A> - 
Method in class clientgui.<A HREF="../clientgui/ClientGUI.html" title="class in clientgui">ClientGUI</A>
<DD>setzt markierte Playliste, aktualisiert PlaylistTable
<DT><A HREF="../clientlogic/ClientFacade.html#setServerIP(java.lang.String)"><B>setServerIP(String)</B></A> - 
Method in class clientlogic.<A HREF="../clientlogic/ClientFacade.html" title="class in clientlogic">ClientFacade</A>
<DD>Legt ServerIP fest
<DT><A HREF="../Common/Song.html#setSongPath(java.lang.String)"><B>setSongPath(String)</B></A> - 
Method in class Common.<A HREF="../Common/Song.html" title="class in Common">Song</A>
<DD>&nbsp;
<DT><A HREF="../Common/Playlist.html#setSongs(java.util.ArrayList)"><B>setSongs(ArrayList&lt;Song&gt;)</B></A> - 
Method in class Common.<A HREF="../Common/Playlist.html" title="class in Common">Playlist</A>
<DD>&nbsp;
<DT><A HREF="../Common/Song.html#setTitel(java.lang.String)"><B>setTitel(String)</B></A> - 
Method in class Common.<A HREF="../Common/Song.html" title="class in Common">Song</A>
<DD>&nbsp;
<DT><A HREF="../clientlogic/player/BufferedAudioInputStream.html#size()"><B>size()</B></A> - 
Method in class clientlogic.player.<A HREF="../clientlogic/player/BufferedAudioInputStream.html" title="class in clientlogic.player">BufferedAudioInputStream</A>
<DD>gibt die Anzahl aller Bytes welche sich im Stream befinden aus, 
 die gelesenen und die noch zu lesenden.
<DT><A HREF="../clientlogic/player/BufferedAudioInputStream.html#skip(long)"><B>skip(long)</B></A> - 
Method in class clientlogic.player.<A HREF="../clientlogic/player/BufferedAudioInputStream.html" title="class in clientlogic.player">BufferedAudioInputStream</A>
<DD>überspringt bestimmte Anzahl Bytes im Stream.
<DT><A HREF="../Common/Song.html" title="class in Common"><B>Song</B></A> - Class in <A HREF="../Common/package-summary.html">Common</A><DD>Definiert Objekt Song.<DT><A HREF="../Common/Song.html#Song(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"><B>Song(String, String, String, String, String, String)</B></A> - 
Constructor for class Common.<A HREF="../Common/Song.html" title="class in Common">Song</A>
<DD>Konstruktor für Speichern eines Liedes
 ohne SongID, da diese von der Datenbank generiert wird und 
 daher vor dem erstmaligen Speichern noch nicht bekannt ist
<DT><A HREF="../Common/Song.html#Song(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"><B>Song(int, String, String, String, String, String, String)</B></A> - 
Constructor for class Common.<A HREF="../Common/Song.html" title="class in Common">Song</A>
<DD>Konstruktor für laden der Songs
 Wird benötigt, um das Lied komplett aus der Datenbank zu lesen.
<DT><A HREF="../Common/SongPackage.html" title="class in Common"><B>SongPackage</B></A> - Class in <A HREF="../Common/package-summary.html">Common</A><DD>Wir erstellen ein Stream-Objekt um den Stream ueber rmi dem Client schicken zu koennen.<DT><A HREF="../Common/SongPackage.html#SongPackage(com.healthmarketscience.rmiio.RemoteInputStream, javax.sound.sampled.AudioFormat, long)"><B>SongPackage(RemoteInputStream, AudioFormat, long)</B></A> - 
Constructor for class Common.<A HREF="../Common/SongPackage.html" title="class in Common">SongPackage</A>
<DD>Erstellt ein Stream-objekt und holt Zusatzinformationen aus dem Audioformat
<DT><A HREF="../Common/SongPackageTest.html" title="class in Common"><B>SongPackageTest</B></A> - Class in <A HREF="../Common/package-summary.html">Common</A><DD>&nbsp;<DT><A HREF="../Common/SongPackageTest.html#SongPackageTest()"><B>SongPackageTest()</B></A> - 
Constructor for class Common.<A HREF="../Common/SongPackageTest.html" title="class in Common">SongPackageTest</A>
<DD>&nbsp;
<DT><A HREF="../Common/SongTest.html" title="class in Common"><B>SongTest</B></A> - Class in <A HREF="../Common/package-summary.html">Common</A><DD>&nbsp;<DT><A HREF="../Common/SongTest.html#SongTest()"><B>SongTest()</B></A> - 
Constructor for class Common.<A HREF="../Common/SongTest.html" title="class in Common">SongTest</A>
<DD>&nbsp;
<DT><A HREF="../clientlogic/ClientMain.html#startClient()"><B>startClient()</B></A> - 
Static method in class clientlogic.<A HREF="../clientlogic/ClientMain.html" title="class in clientlogic">ClientMain</A>
<DD>Startet rmi-client durch Instanziierung der ClientFacade 
 und Eintragung in RMIRegistry
<DT><A HREF="../servergui/ServerGUI.html#startRefresh()"><B>startRefresh()</B></A> - 
Method in class servergui.<A HREF="../servergui/ServerGUI.html" title="class in servergui">ServerGUI</A>
<DD>Aktualisiert den Basisordner
<DT><A HREF="../serverlogic/ServerMain.html#startServer()"><B>startServer()</B></A> - 
Static method in class serverlogic.<A HREF="../serverlogic/ServerMain.html" title="class in serverlogic">ServerMain</A>
<DD>Startet den Server
<DT><A HREF="../clientlogic/ClientFacade.html#startSynchronisation()"><B>startSynchronisation()</B></A> - 
Method in class clientlogic.<A HREF="../clientlogic/ClientFacade.html" title="class in clientlogic">ClientFacade</A>
<DD>Öffnet ein DialogFenster, welches signalisiert, dass Client synchronisiert wird
<DT><A HREF="../clientlogic/ClientFacadeInterface.html#startSynchronisation()"><B>startSynchronisation()</B></A> - 
Method in interface clientlogic.<A HREF="../clientlogic/ClientFacadeInterface.html" title="interface in clientlogic">ClientFacadeInterface</A>
<DD>Start synchronisation.
<DT><A HREF="../clientlogic/ClientMain.html#stopClient()"><B>stopClient()</B></A> - 
Static method in class clientlogic.<A HREF="../clientlogic/ClientMain.html" title="class in clientlogic">ClientMain</A>
<DD>Stopt RMI-Client: entfernt ihn aus der Registry.
<DT><A HREF="../serverlogic/ServerMain.html#stopServer()"><B>stopServer()</B></A> - 
Static method in class serverlogic.<A HREF="../serverlogic/ServerMain.html" title="class in serverlogic">ServerMain</A>
<DD>Stoppt dem Server.
<DT><A HREF="../clientlogic/ClientFacade.html#stopSynchronisation()"><B>stopSynchronisation()</B></A> - 
Method in class clientlogic.<A HREF="../clientlogic/ClientFacade.html" title="class in clientlogic">ClientFacade</A>
<DD>Blendet den SynchronisationsDialog wieder aus, 
 signalisiert, dass Synchronisation des Clients gestoppt ist
<DT><A HREF="../clientlogic/ClientFacadeInterface.html#stopSynchronisation()"><B>stopSynchronisation()</B></A> - 
Method in interface clientlogic.<A HREF="../clientlogic/ClientFacadeInterface.html" title="interface in clientlogic">ClientFacadeInterface</A>
<DD>Stop synchronisation.
<DT><A HREF="../serverlogic/ServerFacade.html#stopSynchronisation(java.lang.String)"><B>stopSynchronisation(String)</B></A> - 
Method in class serverlogic.<A HREF="../serverlogic/ServerFacade.html" title="class in serverlogic">ServerFacade</A>
<DD>stoppt die Synchronisation von allen Clients, die vom Übergebenen Client synchronisiert werden
<DT><A HREF="../serverlogic/ServerFacadeInterface.html#stopSynchronisation(java.lang.String)"><B>stopSynchronisation(String)</B></A> - 
Method in interface serverlogic.<A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A>
<DD>Stop synchronisation.
<DT><A HREF="../logic/StreamHandlerTest.html" title="class in logic"><B>StreamHandlerTest</B></A> - Class in <A HREF="../logic/package-summary.html">logic</A><DD>&nbsp;<DT><A HREF="../logic/StreamHandlerTest.html#StreamHandlerTest()"><B>StreamHandlerTest()</B></A> - 
Constructor for class logic.<A HREF="../logic/StreamHandlerTest.html" title="class in logic">StreamHandlerTest</A>
<DD>&nbsp;
<DT><A HREF="../clientlogic/player/AudioPlayer.html#supply(javax.sound.sampled.AudioInputStream, long)"><B>supply(AudioInputStream, long)</B></A> - 
Method in class clientlogic.player.<A HREF="../clientlogic/player/AudioPlayer.html" title="class in clientlogic.player">AudioPlayer</A>
<DD>Sorgt dafür, dass dem Player der gewünschte AurioStream übergeben wird.
<DT><A HREF="../clientgui/SynchroDialog.html" title="class in clientgui"><B>SynchroDialog</B></A> - Class in <A HREF="../clientgui/package-summary.html">clientgui</A><DD>Dialog Fenster, welches im Server angemeldete Clients anzeigt<DT><A HREF="../clientgui/SynchroDialog.html#SynchroDialog(javax.swing.JFrame)"><B>SynchroDialog(JFrame)</B></A> - 
Constructor for class clientgui.<A HREF="../clientgui/SynchroDialog.html" title="class in clientgui">SynchroDialog</A>
<DD>Konstruktor SynchroDialog
<DT><A HREF="../clientlogic/ClientFacade.html#synchronisationPause()"><B>synchronisationPause()</B></A> - 
Method in class clientlogic.<A HREF="../clientlogic/ClientFacade.html" title="class in clientlogic">ClientFacade</A>
<DD>Pausiert die synchronisierte Wiedergabe auf dem Client
<DT><A HREF="../clientlogic/ClientFacadeInterface.html#synchronisationPause()"><B>synchronisationPause()</B></A> - 
Method in interface clientlogic.<A HREF="../clientlogic/ClientFacadeInterface.html" title="interface in clientlogic">ClientFacadeInterface</A>
<DD>Synchronisation pause.
<DT><A HREF="../clientlogic/ClientFacade.html#synchronisationPlay(Common.SongPackage)"><B>synchronisationPlay(SongPackage)</B></A> - 
Method in class clientlogic.<A HREF="../clientlogic/ClientFacade.html" title="class in clientlogic">ClientFacade</A>
<DD>Startet die Synchronisierte Wiedergabe auf dem Client
<DT><A HREF="../clientlogic/ClientFacadeInterface.html#synchronisationPlay(Common.SongPackage)"><B>synchronisationPlay(SongPackage)</B></A> - 
Method in interface clientlogic.<A HREF="../clientlogic/ClientFacadeInterface.html" title="interface in clientlogic">ClientFacadeInterface</A>
<DD>Synchronisation play.
<DT><A HREF="../clientlogic/ClientFacade.html#synchronisationResume()"><B>synchronisationResume()</B></A> - 
Method in class clientlogic.<A HREF="../clientlogic/ClientFacade.html" title="class in clientlogic">ClientFacade</A>
<DD>Nimmt die Synchronisierte Wiedergabe wieder auf, 
 wenn sie Pausiert wurde
<DT><A HREF="../clientlogic/ClientFacadeInterface.html#synchronisationResume()"><B>synchronisationResume()</B></A> - 
Method in interface clientlogic.<A HREF="../clientlogic/ClientFacadeInterface.html" title="interface in clientlogic">ClientFacadeInterface</A>
<DD>Synchronisation resume.
<DT><A HREF="../serverlogic/ServerFacade.html#synchronize(java.lang.String, java.util.ArrayList)"><B>synchronize(String, ArrayList&lt;Client&gt;)</B></A> - 
Method in class serverlogic.<A HREF="../serverlogic/ServerFacade.html" title="class in serverlogic">ServerFacade</A>
<DD>Startet die Synchronisierung der übergebenen Clients mit dem Master.
<DT><A HREF="../serverlogic/ServerFacadeInterface.html#synchronize(java.lang.String, java.util.ArrayList)"><B>synchronize(String, ArrayList&lt;Client&gt;)</B></A> - 
Method in interface serverlogic.<A HREF="../serverlogic/ServerFacadeInterface.html" title="interface in serverlogic">ServerFacadeInterface</A>
<DD>Synchronize.
</DL>
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="index-15.html"><B>PREV LETTER</B></A>&nbsp;
&nbsp;<A HREF="index-17.html"><B>NEXT LETTER</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?index-filesindex-16.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-16.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<A HREF="index-1.html">A</A> <A HREF="index-2.html">B</A> <A HREF="index-3.html">C</A> <A HREF="index-4.html">D</A> <A HREF="index-5.html">E</A> <A HREF="index-6.html">F</A> <A HREF="index-7.html">G</A> <A HREF="index-8.html">H</A> <A HREF="index-9.html">I</A> <A HREF="index-10.html">L</A> <A HREF="index-11.html">M</A> <A HREF="index-12.html">N</A> <A HREF="index-13.html">O</A> <A HREF="index-14.html">P</A> <A HREF="index-15.html">R</A> <A HREF="index-16.html">S</A> <A HREF="index-17.html">T</A> <A HREF="index-18.html">W</A> <HR>

</BODY>
</HTML>
